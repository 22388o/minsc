//
// Introspection utilities
//

// in: <input/output index>
// out: <explicit amount/asset> (or fail)
inspectExplicitInValue = `OP_INSPECTINPUTVALUE OP_VERIFY`;
inspectExplicitOutValue = `OP_INSPECTOUTPUTVALUE OP_VERIFY`;
inspectExplicitInAsset = `OP_INSPECTINPUTASSET OP_VERIFY`;
inspectExplicitOutAsset = `OP_INSPECTOUTPUTASSET OP_VERIFY`;

// Inspect scriptPubKeys with the given expected version number, or fail if the version mismatches
fn inspectOutSpkVer($expected_version) = `
    OP_INSPECTOUTPUTSCRIPTPUBKEY $expected_version OP_EQUALVERIFY
`;
fn inspectInSpkVer($expected_version) = `
    OP_INSPECTINPUTSCRIPTPUBKEY $expected_version OP_EQUALVERIFY
`;

// in: <expected amount/asset> <input/output index>
// out: none (or fail)
outAssetEqVerify = `inspectExplicitOutAsset OP_EQUALVERIFY`;
inAssetEqVerify = `inspectExplicitInAsset OP_EQUALVERIFY`;
outValueEqVerify = `inspectExplicitOutValue OP_EQUALVERIFY`;
inValueEqVerify = `inspectExplicitInValue OP_EQUALVERIFY`;

// in: <expected program> <expected version> <input/output index>
// out: none (or fail)
outSpkEqVerify = `OP_INSPECTOUTPUTSCRIPTPUBKEY OP_ROT OP_EQUALVERIFY OP_EQUALVERIFY`;
inSpkEqVerify = `OP_INSPECTINPUTSCRIPTPUBKEY OP_ROT OP_EQUALVERIFY OP_EQUALVERIFY`;

fn checkOutput($vout, $asset_id, $amount, $spk_version, $spk_prog) = `
  $asset_id $vout outAssetEqVerify
  $amount $vout outValueEqVerify
  $spk_prog $spk_version $vout outSpkEqVerify
`;

fn checkSameAsset($vin, $vout) = `
    $vin inspectExplicitInAsset
    $vout inspectExplicitOutAsset
    OP_EQUALVERIFY
`;
fn checkSameValue($vin, $vout) = `
    $vin inspectExplicitInValue
    $vout inspectExplicitOutValue
    OP_EQUALVERIFY
    // Checking the value matches without also checking the asset doesn't really make sense, so we always check both.
    checkSameAsset($vin, $vout)
`;
fn checkSameSpk($vin, $vout) = `
    $vin OP_INSPECTINPUTSCRIPTPUBKEY
    $vout OP_INSPECTOUTPUTSCRIPTPUBKEY
    OP_ROT
    OP_EQUALVERIFY OP_EQUALVERIFY
`;

requireRbf = `
  OP_PUSHCURRENTINPUTINDEX
  OP_INSPECTINPUTSEQUENCE
  0xFFFFFFFD
  OP_EQUALVERIFY
`;

//
// Utilities for 64 bit arithmetic
//

add64Verify = `OP_ADD64 OP_VERIFY`;
sub64Verify = `OP_SUB64 OP_VERIFY`;
mul64Verify = `OP_MUL64 OP_VERIFY`;
div64Verify = `OP_DIV64 OP_VERIFY`;
div64VerifyFloor = `div64Verify OP_NIP`;
neg64Verify = `OP_NEG64 OP_VERIFY`;

gt64Verify = `OP_GREATERTHAN64 OP_VERIFY`;
lt64Verify = `OP_LESSTHAN64 OP_VERIFY`;
gte64Verify = `OP_GREATERTHANOREQUAL64 OP_VERIFY`;
lte64Verify = `OP_LESSTHANOREQUAL64 OP_VERIFY`;

// Some useful Liquid asset IDs
LBTC = 0x6d521c38ec1ea15734ae22b7c46064412829c0d0579f0a713d1c04ede979026f;
TLBTC = 0x499a818545f6bae39fc03b637f2a4e1e64e590cac1bc3a6f6d71aa4443654c14;
